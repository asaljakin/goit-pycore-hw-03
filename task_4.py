# Завдання 4

# У межах вашої організації, ви відповідаєте за організацію привітань колег з днем народження. 
# Щоб оптимізувати цей процес, вам потрібно створити функцію get_upcoming_birthdays, 
# яка допоможе вам визначати, кого з колег потрібно привітати. 
# Функція повинна повернути список всіх у кого день народження вперед на 7 днів включаючи поточний день.

# У вашому розпорядженні є список users, кожен елемент якого містить інформацію про ім'я користувача та його день народження.
# Оскільки дні народження колег можуть припадати на вихідні, ваша функція також повинна враховувати це
# та переносити дату привітання на наступний робочий день, якщо необхідно.

# Вимоги до завдання:

# Параметр функції users - це список словників, де кожен словник містить ключі name (ім'я користувача, рядок)
#  та birthday (день народження, рядок у форматі 'рік.місяць.дата').
# Функція має визначати, чиї дні народження випадають вперед на 7 днів включаючи поточний день. 
# Якщо день народження припадає на вихідний, дата привітання переноситься на наступний понеділок.
# Функція повертає список словників, де кожен словник містить інформацію про користувача (ключ name)
#  та дату привітання (ключ congratulation_date, дані якого у форматі рядка 'рік.місяць.дата').


# Рекомендації для виконання:

# Припускаємо, що ви отримали список users, де кожен словник містить name (ім'я користувача) та birthday (дата народження у форматі рядка 'рік.місяць.дата').
# Ви повинні перетворити дати народження з рядків у об'єкти datetime. 
# Конвертуйте дату народження із рядка у datetime об'єкт - datetime.strptime(user["birthday"], "%Y.%m.%d").date(). 
# Оскільки потрібна лише дата (без часу), використовуйте .date() для отримання тільки дати.
# Визначте поточну дату системи за допомогою datetime.today().date().
# Пройдіться по списку users та аналізуйте дати народження кожного користувача (for user in users:).
# Перевірте, чи вже минув день народження в цьому році (if birthday_this_year < today). Якщо так, розгляньте дату на наступний рік.
# Визначте різницю між днем народження та поточним днем для визначення днів народження на наступний тиждень.
# Перевірте, чи день народження припадає на вихідний. Якщо так, перенесіть дату привітання на наступний понеділок.
# Створіть структуру даних, яка зберігатиме ім'я користувача та відповідну дату привітання, якщо день народження відбувається протягом наступного тижня.
# Виведіть зібрані дані у вигляді списку словників з іменами користувачів та датами привітань.

from datetime import datetime

def get_upcoming_birthdays(users:list)->list:
    now_date = datetime.today().date()
    rez=[]
    for user in users:
        birthday = datetime.strptime(user["birthday"], "%Y.%m.%d").date()
        next_birthday = datetime(now_date.year,birthday.month,birthday.day).date() 
        if next_birthday < now_date:
            next_birthday = datetime(now_date.year+1,birthday.month,birthday.day).date() 
        if (next_birthday.toordinal() - now_date.toordinal()) <=7:
            weekday = next_birthday.weekday()-5
            next_birthday = next_birthday if weekday<0 else datetime(next_birthday.year,next_birthday.month,next_birthday.day+weekday).date()
            rez.append({"name":user["name"], "congratulation_date":next_birthday})
    
    return rez 

users = [
    {"name": "John Doe", "birthday": "1985.12.08"},
    {"name": "Jane Smith", "birthday": "1990.12.10"}
]

upcoming_birthdays = get_upcoming_birthdays(users)
print("Список привітань на цьому тижні:", upcoming_birthdays)